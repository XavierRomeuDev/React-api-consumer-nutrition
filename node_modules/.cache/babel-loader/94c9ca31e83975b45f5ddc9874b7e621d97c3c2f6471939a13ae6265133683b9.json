{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Documents\\\\3r\\\\DAAW\\\\REACTJS\\\\practica2\\\\src\\\\Components\\\\ProductCard.js\";\nimport React from 'react';\nimport { Rating } from \"react-simple-star-rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductCard = _ref => {\n  let {\n    handleRating,\n    setCurrentId,\n    setProduct,\n    products,\n    rating,\n    limit\n  } = _ref;\n  if (limit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-16 separator\",\n      children: products.slice(0, limit).map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"product-image\",\n              src: product.image,\n              alt: product.product_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this), \" \", product.product_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, this), \" \", product.keywords + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Global rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), \" \", product.rate + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Number of rates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), \" \", product.num_rates + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              onClick: rating => {\n                handleRating(rating);\n                setCurrentId(product.id);\n                setProduct({\n                  barcode: product.barcode,\n                  product_name: product.product_name,\n                  keywords: product.keywords,\n                  image: product.image,\n                  total_rate: product.total_rate + rating,\n                  rate: (product.rate + rating) / product.num_rates,\n                  num_rates: product.num_rates + 1\n                });\n              },\n              ratingValue: rating,\n              size: 20,\n              label: true,\n              transition: true,\n              fillColor: \"orange\",\n              emptyColor: \"gray\",\n              className: \"stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-16\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"product-image\",\n              src: product.image,\n              alt: product.product_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), \" \", product.product_name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), \" \", product.keywords + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Global rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), \" \", product.rate + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Number of rates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), \" \", product.num_rates + \"\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              onClick: rating => {\n                handleRating(rating);\n                setCurrentId(product.id);\n                setProduct({\n                  barcode: product.barcode,\n                  product_name: product.product_name,\n                  keywords: product.keywords,\n                  image: product.image,\n                  total_rate: product.total_rate + rating,\n                  rate: (product.rate + rating) / product.num_rates,\n                  num_rates: product.num_rates + 1\n                });\n              },\n              ratingValue: rating,\n              size: 20,\n              label: true,\n              transition: true,\n              fillColor: \"orange\",\n              emptyColor: \"gray\",\n              className: \"stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n};\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","Rating","ProductCard","handleRating","setCurrentId","setProduct","products","rating","limit","slice","map","product","image","product_name","keywords","rate","num_rates","id","barcode","total_rate"],"sources":["C:/Users/Xavier/Documents/3r/DAAW/REACTJS/practica2/src/Components/ProductCard.js"],"sourcesContent":["import React from 'react'\r\nimport { Rating } from \"react-simple-star-rating\";\r\n\r\nexport const ProductCard = ({handleRating, setCurrentId, setProduct, products, rating, limit}) => {\r\n    if(limit){\r\n        return (\r\n        <div className=\"col-md-16 separator\">\r\n        {products.slice(0,limit).map((product) => (\r\n          <div className=\"card mb-1\" key={product.id}>\r\n            <div className=\"card-body\">\r\n              <div>\r\n                <img\r\n                  className=\"product-image\"\r\n                  src={product.image}\r\n                  alt={product.product_name} \r\n                ></img>\r\n              </div>\r\n              <div className=\"product-data\">\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Name:</strong> {product.product_name}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Keywords:</strong> {product.keywords + \"\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Global rating:</strong> {product.rate + \"\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Number of rates:</strong> {product.num_rates + \"\"}{\" \"}\r\n                </p>\r\n  \r\n                <Rating\r\n                  onClick={(rating) =>{\r\n                    handleRating(rating);\r\n                    setCurrentId(product.id);\r\n                    setProduct({\r\n                      barcode: product.barcode,\r\n                      product_name: product.product_name,\r\n                      keywords: product.keywords,\r\n                      image: product.image,\r\n                      total_rate: product.total_rate + rating,\r\n                      rate: (product.rate + rating) / product.num_rates,\r\n                      num_rates: product.num_rates + 1,\r\n                    });\r\n                  }}\r\n                  ratingValue={rating}\r\n                  size={20}\r\n                  label\r\n                  transition\r\n                  fillColor=\"orange\"\r\n                  emptyColor=\"gray\"\r\n                  className=\"stars\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n        );\r\n    } else{\r\n        return (\r\n        <div className=\"col-md-16\">\r\n      {products.map((product) => (\r\n        <div className=\"card mb-1\" key={product.id}>\r\n          <div className=\"card-body\">\r\n            <div>\r\n              <img\r\n                className=\"product-image\"\r\n                src={product.image}\r\n                alt={product.product_name} \r\n              ></img>\r\n            </div>\r\n            <div className=\"product-data\">\r\n              <p>\r\n                {\" \"}\r\n                <strong>Name:</strong> {product.product_name}{\" \"}\r\n              </p>\r\n              <p>\r\n                {\" \"}\r\n                <strong>Keywords:</strong> {product.keywords + \"\"}{\" \"}\r\n              </p>\r\n              <p>\r\n                {\" \"}\r\n                <strong>Global rating:</strong> {product.rate + \"\"}{\" \"}\r\n              </p>\r\n              <p>\r\n                {\" \"}\r\n                <strong>Number of rates:</strong> {product.num_rates + \"\"}{\" \"}\r\n              </p>\r\n\r\n              <Rating\r\n                onClick={(rating) =>{\r\n                  handleRating(rating);\r\n                  setCurrentId(product.id);\r\n                  setProduct({\r\n                    barcode: product.barcode,\r\n                    product_name: product.product_name,\r\n                    keywords: product.keywords,\r\n                    image: product.image,\r\n                    total_rate: product.total_rate + rating,\r\n                    rate: (product.rate + rating) / product.num_rates,\r\n                    num_rates: product.num_rates + 1,\r\n                  });\r\n                }}\r\n                ratingValue={rating}\r\n                size={20}\r\n                label\r\n                transition\r\n                fillColor=\"orange\"\r\n                emptyColor=\"gray\"\r\n                className=\"stars\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n        );\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}