{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Documents\\\\3r\\\\DAAW\\\\REACTJS\\\\practica2\\\\src\\\\Components\\\\TopProducts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase\";\nimport { ProductCard } from \"./ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopProducts = () => {\n  _s();\n  const [currentId, setCurrentId] = useState('');\n  const [products, setProducts] = useState([]);\n  const [rating, setRating] = useState(0);\n  const [product, setProduct] = useState();\n  useEffect(() => {\n    getProducts();\n  }, []);\n  useEffect(() => {\n    if (currentId !== '') {\n      updateProduct(currentId);\n    } else {\n      console.log('No object to update');\n    }\n    // eslint-disable-next-line\n  }, [product]);\n  const getProducts = () => {\n    db.collection(\"products\").orderBy('rate', 'desc').onSnapshot(querySnapshot => {\n      const docs = [];\n      querySnapshot.forEach(doc => {\n        docs.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setProducts(docs);\n    });\n  };\n  const handleRating = rating => {\n    setRating(rating);\n  };\n  const updateProduct = async id => {\n    await db.collection('products').doc(id).update(product);\n    console.log('product with ' + id + ' updated succesfully');\n  };\n  if (products.length > 0) {\n    return /*#__PURE__*/_jsxDEV(ProductCard, {\n      handleRating: handleRating,\n      setCurrentId: setCurrentId,\n      setProduct: setProduct,\n      products: products,\n      rating: rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(EmptyDatabase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(TopProducts, \"445tcc6GePpQucw20L+Cm/cZOE4=\");\n_c = TopProducts;\nvar _c;\n$RefreshReg$(_c, \"TopProducts\");","map":{"version":3,"names":["React","useEffect","useState","db","ProductCard","TopProducts","currentId","setCurrentId","products","setProducts","rating","setRating","product","setProduct","getProducts","updateProduct","console","log","collection","orderBy","onSnapshot","querySnapshot","docs","forEach","doc","push","data","id","handleRating","update","length"],"sources":["C:/Users/Xavier/Documents/3r/DAAW/REACTJS/practica2/src/Components/TopProducts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { ProductCard } from \"./ProductCard\";\r\n\r\nexport const TopProducts = () => {\r\n  const [currentId, setCurrentId] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [rating, setRating] = useState(0);\r\n  const [product, setProduct] = useState();\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(currentId !== ''){\r\n      updateProduct(currentId);\r\n    } else{\r\n      console.log('No object to update');\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [product]);\r\n\r\n  const getProducts = () => {\r\n    db.collection(\"products\").orderBy('rate', 'desc').onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setProducts(docs);\r\n    });\r\n  };\r\n\r\n  const handleRating = (rating) => {\r\n    setRating(rating);\r\n  };\r\n\r\n  const updateProduct = async (id) =>{\r\n    await db.collection('products').doc(id).update(product);\r\n    console.log('product with '+ id + ' updated succesfully');\r\n  };\r\n\r\n  if(products.length > 0){\r\n    return (\r\n      <ProductCard handleRating={handleRating} setCurrentId={setCurrentId} setProduct={setProduct} products={products} rating={rating}/>\r\n    );\r\n  } else{\r\n    return(\r\n      <EmptyDatabase/>\r\n    );\r\n  }\r\n\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,WAAW,QAAQ,eAAe;AAAC;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,EAAE;EAExCD,SAAS,CAAC,MAAM;IACda,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAGK,SAAS,KAAK,EAAE,EAAC;MAClBS,aAAa,CAACT,SAAS,CAAC;IAC1B,CAAC,MAAK;MACJU,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;IACA;EACF,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAME,WAAW,GAAG,MAAM;IACxBX,EAAE,CAACe,UAAU,CAAC,UAAU,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAACC,UAAU,CAAEC,aAAa,IAAK;MAC9E,MAAMC,IAAI,GAAG,EAAE;MACfD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BF,IAAI,CAACG,IAAI,CAAC;UAAE,GAAGD,GAAG,CAACE,IAAI,EAAE;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAG,CAAC,CAAC;MAC1C,CAAC,CAAC;MACFlB,WAAW,CAACa,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,YAAY,GAAIlB,MAAM,IAAK;IAC/BC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMK,aAAa,GAAG,MAAOY,EAAE,IAAI;IACjC,MAAMxB,EAAE,CAACe,UAAU,CAAC,UAAU,CAAC,CAACM,GAAG,CAACG,EAAE,CAAC,CAACE,MAAM,CAACjB,OAAO,CAAC;IACvDI,OAAO,CAACC,GAAG,CAAC,eAAe,GAAEU,EAAE,GAAG,sBAAsB,CAAC;EAC3D,CAAC;EAED,IAAGnB,QAAQ,CAACsB,MAAM,GAAG,CAAC,EAAC;IACrB,oBACE,QAAC,WAAW;MAAC,YAAY,EAAEF,YAAa;MAAC,YAAY,EAAErB,YAAa;MAAC,UAAU,EAAEM,UAAW;MAAC,QAAQ,EAAEL,QAAS;MAAC,MAAM,EAAEE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAEtI,CAAC,MAAK;IACJ,oBACE,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAE;EAEpB;AAEF,CAAC;AAAC,GAhDWL,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}