{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Documents\\\\3r\\\\DAAW\\\\REACTJS\\\\practica2\\\\src\\\\Components\\\\ProductCard.js\";\nimport React from 'react';\nimport { Rating } from \"react-simple-star-rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductCard = _ref => {\n  let {\n    handleRating,\n    setCurrentId,\n    setProduct,\n    products,\n    rating,\n    limit\n  } = _ref;\n  return {\n    if(limit) {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-16\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"product-image\",\n                src: product.image,\n                alt: product.product_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 12,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"product-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 19\n                }, this), \" \", product.product_name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Keywords:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 19\n                }, this), \" \", product.keywords + \"\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Global rating:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 19\n                }, this), \" \", product.rate + \"\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Number of rates:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, this), \" \", product.num_rates + \"\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                onClick: rating => {\n                  handleRating(rating);\n                  setCurrentId(product.id);\n                  setProduct({\n                    barcode: product.barcode,\n                    product_name: product.product_name,\n                    keywords: product.keywords,\n                    image: product.image,\n                    total_rate: product.total_rate + rating,\n                    rate: (product.rate + rating) / product.num_rates,\n                    num_rates: product.num_rates + 1\n                  });\n                },\n                ratingValue: rating,\n                size: 20,\n                label: true,\n                transition: true,\n                fillColor: \"orange\",\n                emptyColor: \"gray\",\n                className: \"stars\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this);\n    }\n  };\n};\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","Rating","ProductCard","handleRating","setCurrentId","setProduct","products","rating","limit","if","map","product","image","product_name","keywords","rate","num_rates","id","barcode","total_rate"],"sources":["C:/Users/Xavier/Documents/3r/DAAW/REACTJS/practica2/src/Components/ProductCard.js"],"sourcesContent":["import React from 'react'\r\nimport { Rating } from \"react-simple-star-rating\";\r\n\r\nexport const ProductCard = ({handleRating, setCurrentId, setProduct, products, rating, limit}) => {\r\n  return (\r\n    {if(limit){\r\n        <div className=\"col-md-16\">\r\n        {products.map((product) => (\r\n          <div className=\"card mb-1\" key={product.id}>\r\n            <div className=\"card-body\">\r\n              <div>\r\n                <img\r\n                  className=\"product-image\"\r\n                  src={product.image}\r\n                  alt={product.product_name} \r\n                ></img>\r\n              </div>\r\n              <div className=\"product-data\">\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Name:</strong> {product.product_name}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Keywords:</strong> {product.keywords + \"\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Global rating:</strong> {product.rate + \"\"}{\" \"}\r\n                </p>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Number of rates:</strong> {product.num_rates + \"\"}{\" \"}\r\n                </p>\r\n  \r\n                <Rating\r\n                  onClick={(rating) =>{\r\n                    handleRating(rating);\r\n                    setCurrentId(product.id);\r\n                    setProduct({\r\n                      barcode: product.barcode,\r\n                      product_name: product.product_name,\r\n                      keywords: product.keywords,\r\n                      image: product.image,\r\n                      total_rate: product.total_rate + rating,\r\n                      rate: (product.rate + rating) / product.num_rates,\r\n                      num_rates: product.num_rates + 1,\r\n                    });\r\n                  }}\r\n                  ratingValue={rating}\r\n                  size={20}\r\n                  label\r\n                  transition\r\n                  fillColor=\"orange\"\r\n                  emptyColor=\"gray\"\r\n                  className=\"stars\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    }}\r\n    \r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,0BAA0B;AAAC;AAElD,OAAO,MAAMC,WAAW,GAAG,QAAuE;EAAA,IAAtE;IAACC,YAAY;IAAEC,YAAY;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAK,CAAC;EAC3F,OACE;IAACC,EAAE,CAACD,KAAK,EAAC;MACN;QAAK,SAAS,EAAC,WAAW;QAAA,UACzBF,QAAQ,CAACI,GAAG,CAAEC,OAAO,iBACpB;UAAK,SAAS,EAAC,WAAW;UAAA,uBACxB;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cAAA,uBACE;gBACE,SAAS,EAAC,eAAe;gBACzB,GAAG,EAAEA,OAAO,CAACC,KAAM;gBACnB,GAAG,EAAED,OAAO,CAACE;cAAa;gBAAA;gBAAA;gBAAA;cAAA;YACrB;cAAA;cAAA;cAAA;YAAA,QACH,eACN;cAAK,SAAS,EAAC,cAAc;cAAA,wBAC3B;gBAAA,WACG,GAAG,eACJ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAsB,OAAEF,OAAO,CAACE,YAAY,EAAE,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC/C,eACJ;gBAAA,WACG,GAAG,eACJ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAA0B,OAAEF,OAAO,CAACG,QAAQ,GAAG,EAAE,EAAE,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACpD,eACJ;gBAAA,WACG,GAAG,eACJ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAA+B,OAAEH,OAAO,CAACI,IAAI,GAAG,EAAE,EAAE,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACrD,eACJ;gBAAA,WACG,GAAG,eACJ;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAiC,OAAEJ,OAAO,CAACK,SAAS,GAAG,EAAE,EAAE,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC5D,eAEJ,QAAC,MAAM;gBACL,OAAO,EAAGT,MAAM,IAAI;kBAClBJ,YAAY,CAACI,MAAM,CAAC;kBACpBH,YAAY,CAACO,OAAO,CAACM,EAAE,CAAC;kBACxBZ,UAAU,CAAC;oBACTa,OAAO,EAAEP,OAAO,CAACO,OAAO;oBACxBL,YAAY,EAAEF,OAAO,CAACE,YAAY;oBAClCC,QAAQ,EAAEH,OAAO,CAACG,QAAQ;oBAC1BF,KAAK,EAAED,OAAO,CAACC,KAAK;oBACpBO,UAAU,EAAER,OAAO,CAACQ,UAAU,GAAGZ,MAAM;oBACvCQ,IAAI,EAAE,CAACJ,OAAO,CAACI,IAAI,GAAGR,MAAM,IAAII,OAAO,CAACK,SAAS;oBACjDA,SAAS,EAAEL,OAAO,CAACK,SAAS,GAAG;kBACjC,CAAC,CAAC;gBACJ,CAAE;gBACF,WAAW,EAAET,MAAO;gBACpB,IAAI,EAAE,EAAG;gBACT,KAAK;gBACL,UAAU;gBACV,SAAS,EAAC,QAAQ;gBAClB,UAAU,EAAC,MAAM;gBACjB,SAAS,EAAC;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QACjB;YAAA;cAAA;cAAA;cAAA;YAAA,QACE;UAAA;YAAA;YAAA;YAAA;UAAA;QACF,GAlDwBI,OAAO,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAoD3C;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IACR;EAAC,CAAC;AAGN,CAAC;AAAC,KA9DWf,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}